### YamlMime:ManagedReference
items:
- uid: AzureServiceBusFlow.Abstractions.ICommandProducer`1
  commentId: T:AzureServiceBusFlow.Abstractions.ICommandProducer`1
  id: ICommandProducer`1
  parent: AzureServiceBusFlow.Abstractions
  children:
  - AzureServiceBusFlow.Abstractions.ICommandProducer`1.ProduceCommandAsync(`0,AzureServiceBusFlow.Models.MessageOptions,System.Threading.CancellationToken)
  - AzureServiceBusFlow.Abstractions.ICommandProducer`1.ProduceCommandAsync(`0,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  - AzureServiceBusFlow.Abstractions.ICommandProducer`1.ProduceCommandAsync(`0,System.Threading.CancellationToken)
  - AzureServiceBusFlow.Abstractions.ICommandProducer`1.ProduceCommandAsync(`0,System.TimeSpan,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: ICommandProducer<TCommand>
  nameWithType: ICommandProducer<TCommand>
  fullName: AzureServiceBusFlow.Abstractions.ICommandProducer<TCommand>
  type: Interface
  source:
    remote:
      path: src/AzureServiceBusFlow/Abstractions/ICommandProducer.cs
      branch: main
      repo: https://github.com/migueltotti/AzureServiceBusFlow.git
    id: ICommandProducer
    path: ../src/AzureServiceBusFlow/Abstractions/ICommandProducer.cs
    startLine: 4
  assemblies:
  - AzureServiceBusFlow.Configurations
  namespace: AzureServiceBusFlow.Abstractions
  syntax:
    content: 'public interface ICommandProducer<in TCommand> where TCommand : class, IServiceBusMessage'
    typeParameters:
    - id: TCommand
    content.vb: Public Interface ICommandProducer(Of In TCommand As {Class, IServiceBusMessage})
  nameWithType.vb: ICommandProducer(Of TCommand)
  fullName.vb: AzureServiceBusFlow.Abstractions.ICommandProducer(Of TCommand)
  name.vb: ICommandProducer(Of TCommand)
- uid: AzureServiceBusFlow.Abstractions.ICommandProducer`1.ProduceCommandAsync(`0,System.Threading.CancellationToken)
  commentId: M:AzureServiceBusFlow.Abstractions.ICommandProducer`1.ProduceCommandAsync(`0,System.Threading.CancellationToken)
  id: ProduceCommandAsync(`0,System.Threading.CancellationToken)
  parent: AzureServiceBusFlow.Abstractions.ICommandProducer`1
  langs:
  - csharp
  - vb
  name: ProduceCommandAsync(TCommand, CancellationToken)
  nameWithType: ICommandProducer<TCommand>.ProduceCommandAsync(TCommand, CancellationToken)
  fullName: AzureServiceBusFlow.Abstractions.ICommandProducer<TCommand>.ProduceCommandAsync(TCommand, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/AzureServiceBusFlow/Abstractions/ICommandProducer.cs
      branch: main
      repo: https://github.com/migueltotti/AzureServiceBusFlow.git
    id: ProduceCommandAsync
    path: ../src/AzureServiceBusFlow/Abstractions/ICommandProducer.cs
    startLine: 9
  assemblies:
  - AzureServiceBusFlow.Configurations
  namespace: AzureServiceBusFlow.Abstractions
  summary: Produces the command without additional options.
  example: []
  syntax:
    content: Task ProduceCommandAsync(TCommand command, CancellationToken cancellationToken)
    parameters:
    - id: command
      type: '{TCommand}'
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function ProduceCommandAsync(command As TCommand, cancellationToken As CancellationToken) As Task
  overload: AzureServiceBusFlow.Abstractions.ICommandProducer`1.ProduceCommandAsync*
  nameWithType.vb: ICommandProducer(Of TCommand).ProduceCommandAsync(TCommand, CancellationToken)
  fullName.vb: AzureServiceBusFlow.Abstractions.ICommandProducer(Of TCommand).ProduceCommandAsync(TCommand, System.Threading.CancellationToken)
- uid: AzureServiceBusFlow.Abstractions.ICommandProducer`1.ProduceCommandAsync(`0,AzureServiceBusFlow.Models.MessageOptions,System.Threading.CancellationToken)
  commentId: M:AzureServiceBusFlow.Abstractions.ICommandProducer`1.ProduceCommandAsync(`0,AzureServiceBusFlow.Models.MessageOptions,System.Threading.CancellationToken)
  id: ProduceCommandAsync(`0,AzureServiceBusFlow.Models.MessageOptions,System.Threading.CancellationToken)
  parent: AzureServiceBusFlow.Abstractions.ICommandProducer`1
  langs:
  - csharp
  - vb
  name: ProduceCommandAsync(TCommand, MessageOptions, CancellationToken)
  nameWithType: ICommandProducer<TCommand>.ProduceCommandAsync(TCommand, MessageOptions, CancellationToken)
  fullName: AzureServiceBusFlow.Abstractions.ICommandProducer<TCommand>.ProduceCommandAsync(TCommand, AzureServiceBusFlow.Models.MessageOptions, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/AzureServiceBusFlow/Abstractions/ICommandProducer.cs
      branch: main
      repo: https://github.com/migueltotti/AzureServiceBusFlow.git
    id: ProduceCommandAsync
    path: ../src/AzureServiceBusFlow/Abstractions/ICommandProducer.cs
    startLine: 14
  assemblies:
  - AzureServiceBusFlow.Configurations
  namespace: AzureServiceBusFlow.Abstractions
  summary: Produces the command using explicit message options such as delay or application properties.
  example: []
  syntax:
    content: Task ProduceCommandAsync(TCommand command, MessageOptions messageOptions, CancellationToken cancellationToken)
    parameters:
    - id: command
      type: '{TCommand}'
    - id: messageOptions
      type: AzureServiceBusFlow.Models.MessageOptions
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function ProduceCommandAsync(command As TCommand, messageOptions As MessageOptions, cancellationToken As CancellationToken) As Task
  overload: AzureServiceBusFlow.Abstractions.ICommandProducer`1.ProduceCommandAsync*
  nameWithType.vb: ICommandProducer(Of TCommand).ProduceCommandAsync(TCommand, MessageOptions, CancellationToken)
  fullName.vb: AzureServiceBusFlow.Abstractions.ICommandProducer(Of TCommand).ProduceCommandAsync(TCommand, AzureServiceBusFlow.Models.MessageOptions, System.Threading.CancellationToken)
- uid: AzureServiceBusFlow.Abstractions.ICommandProducer`1.ProduceCommandAsync(`0,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  commentId: M:AzureServiceBusFlow.Abstractions.ICommandProducer`1.ProduceCommandAsync(`0,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  id: ProduceCommandAsync(`0,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)
  parent: AzureServiceBusFlow.Abstractions.ICommandProducer`1
  langs:
  - csharp
  - vb
  name: ProduceCommandAsync(TCommand, IDictionary<string, object>, CancellationToken)
  nameWithType: ICommandProducer<TCommand>.ProduceCommandAsync(TCommand, IDictionary<string, object>, CancellationToken)
  fullName: AzureServiceBusFlow.Abstractions.ICommandProducer<TCommand>.ProduceCommandAsync(TCommand, System.Collections.Generic.IDictionary<string, object>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/AzureServiceBusFlow/Abstractions/ICommandProducer.cs
      branch: main
      repo: https://github.com/migueltotti/AzureServiceBusFlow.git
    id: ProduceCommandAsync
    path: ../src/AzureServiceBusFlow/Abstractions/ICommandProducer.cs
    startLine: 19
  assemblies:
  - AzureServiceBusFlow.Configurations
  namespace: AzureServiceBusFlow.Abstractions
  summary: Produces the command with a set of application properties that will be attached to the message.
  example: []
  syntax:
    content: Task ProduceCommandAsync(TCommand command, IDictionary<string, object> applicationProperties, CancellationToken cancellationToken)
    parameters:
    - id: command
      type: '{TCommand}'
    - id: applicationProperties
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function ProduceCommandAsync(command As TCommand, applicationProperties As IDictionary(Of String, Object), cancellationToken As CancellationToken) As Task
  overload: AzureServiceBusFlow.Abstractions.ICommandProducer`1.ProduceCommandAsync*
  nameWithType.vb: ICommandProducer(Of TCommand).ProduceCommandAsync(TCommand, IDictionary(Of String, Object), CancellationToken)
  fullName.vb: AzureServiceBusFlow.Abstractions.ICommandProducer(Of TCommand).ProduceCommandAsync(TCommand, System.Collections.Generic.IDictionary(Of String, Object), System.Threading.CancellationToken)
  name.vb: ProduceCommandAsync(TCommand, IDictionary(Of String, Object), CancellationToken)
- uid: AzureServiceBusFlow.Abstractions.ICommandProducer`1.ProduceCommandAsync(`0,System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:AzureServiceBusFlow.Abstractions.ICommandProducer`1.ProduceCommandAsync(`0,System.TimeSpan,System.Threading.CancellationToken)
  id: ProduceCommandAsync(`0,System.TimeSpan,System.Threading.CancellationToken)
  parent: AzureServiceBusFlow.Abstractions.ICommandProducer`1
  langs:
  - csharp
  - vb
  name: ProduceCommandAsync(TCommand, TimeSpan, CancellationToken)
  nameWithType: ICommandProducer<TCommand>.ProduceCommandAsync(TCommand, TimeSpan, CancellationToken)
  fullName: AzureServiceBusFlow.Abstractions.ICommandProducer<TCommand>.ProduceCommandAsync(TCommand, System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/AzureServiceBusFlow/Abstractions/ICommandProducer.cs
      branch: main
      repo: https://github.com/migueltotti/AzureServiceBusFlow.git
    id: ProduceCommandAsync
    path: ../src/AzureServiceBusFlow/Abstractions/ICommandProducer.cs
    startLine: 24
  assemblies:
  - AzureServiceBusFlow.Configurations
  namespace: AzureServiceBusFlow.Abstractions
  summary: Produces the command with a delivery delay before it becomes available for processing.
  example: []
  syntax:
    content: Task ProduceCommandAsync(TCommand command, TimeSpan delay, CancellationToken cancellationToken)
    parameters:
    - id: command
      type: '{TCommand}'
    - id: delay
      type: System.TimeSpan
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function ProduceCommandAsync(command As TCommand, delay As TimeSpan, cancellationToken As CancellationToken) As Task
  overload: AzureServiceBusFlow.Abstractions.ICommandProducer`1.ProduceCommandAsync*
  nameWithType.vb: ICommandProducer(Of TCommand).ProduceCommandAsync(TCommand, TimeSpan, CancellationToken)
  fullName.vb: AzureServiceBusFlow.Abstractions.ICommandProducer(Of TCommand).ProduceCommandAsync(TCommand, System.TimeSpan, System.Threading.CancellationToken)
references:
- uid: AzureServiceBusFlow.Abstractions
  commentId: N:AzureServiceBusFlow.Abstractions
  href: AzureServiceBusFlow.html
  name: AzureServiceBusFlow.Abstractions
  nameWithType: AzureServiceBusFlow.Abstractions
  fullName: AzureServiceBusFlow.Abstractions
  spec.csharp:
  - uid: AzureServiceBusFlow
    name: AzureServiceBusFlow
    href: AzureServiceBusFlow.html
  - name: .
  - uid: AzureServiceBusFlow.Abstractions
    name: Abstractions
    href: AzureServiceBusFlow.Abstractions.html
  spec.vb:
  - uid: AzureServiceBusFlow
    name: AzureServiceBusFlow
    href: AzureServiceBusFlow.html
  - name: .
  - uid: AzureServiceBusFlow.Abstractions
    name: Abstractions
    href: AzureServiceBusFlow.Abstractions.html
- uid: AzureServiceBusFlow.Abstractions.ICommandProducer`1.ProduceCommandAsync*
  commentId: Overload:AzureServiceBusFlow.Abstractions.ICommandProducer`1.ProduceCommandAsync
  href: AzureServiceBusFlow.Abstractions.ICommandProducer-1.html#AzureServiceBusFlow_Abstractions_ICommandProducer_1_ProduceCommandAsync__0_System_Threading_CancellationToken_
  name: ProduceCommandAsync
  nameWithType: ICommandProducer<TCommand>.ProduceCommandAsync
  fullName: AzureServiceBusFlow.Abstractions.ICommandProducer<TCommand>.ProduceCommandAsync
  nameWithType.vb: ICommandProducer(Of TCommand).ProduceCommandAsync
  fullName.vb: AzureServiceBusFlow.Abstractions.ICommandProducer(Of TCommand).ProduceCommandAsync
- uid: '{TCommand}'
  commentId: '!:TCommand'
  definition: TCommand
  name: TCommand
  nameWithType: TCommand
  fullName: TCommand
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: TCommand
  name: TCommand
  nameWithType: TCommand
  fullName: TCommand
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: AzureServiceBusFlow.Models.MessageOptions
  commentId: T:AzureServiceBusFlow.Models.MessageOptions
  parent: AzureServiceBusFlow.Models
  href: AzureServiceBusFlow.Models.MessageOptions.html
  name: MessageOptions
  nameWithType: MessageOptions
  fullName: AzureServiceBusFlow.Models.MessageOptions
- uid: AzureServiceBusFlow.Models
  commentId: N:AzureServiceBusFlow.Models
  href: AzureServiceBusFlow.html
  name: AzureServiceBusFlow.Models
  nameWithType: AzureServiceBusFlow.Models
  fullName: AzureServiceBusFlow.Models
  spec.csharp:
  - uid: AzureServiceBusFlow
    name: AzureServiceBusFlow
    href: AzureServiceBusFlow.html
  - name: .
  - uid: AzureServiceBusFlow.Models
    name: Models
    href: AzureServiceBusFlow.Models.html
  spec.vb:
  - uid: AzureServiceBusFlow
    name: AzureServiceBusFlow
    href: AzureServiceBusFlow.html
  - name: .
  - uid: AzureServiceBusFlow.Models
    name: Models
    href: AzureServiceBusFlow.Models.html
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<string, object>
  nameWithType: IDictionary<string, object>
  fullName: System.Collections.Generic.IDictionary<string, object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of String, Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
